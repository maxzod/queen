"use strict";(self.webpackChunkqueen=self.webpackChunkqueen||[]).push([[533],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,s(s({ref:t},c),{},{components:n})):r.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"Pipes"},s="Introduction",i={unversionedId:"pipes",id:"pipes",title:"Pipes",description:"pipes allows you (app developer) or other package developers to push and listen to in app events ,",source:"@site/docs/10_pipes.md",sourceDirName:".",slug:"/pipes",permalink:"/queen/docs/pipes",draft:!1,editUrl:"https://github.com/FlutterQueen/queen/tree/master/docs/10_pipes.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Pipes"},sidebar:"tutorialSidebar",previous:{title:"Lunchers",permalink:"/queen/docs/launchers"}},p={},l=[{value:"<code>QEvent</code>",id:"qevent",level:2},{value:"<code>QListener</code>",id:"qlistener",level:2},{value:"Add new Event to the pipes",id:"add-new-event-to-the-pipes",level:2},{value:"register a listener for event",id:"register-a-listener-for-event",level:2},{value:"remove a listener from the pipes",id:"remove-a-listener-from-the-pipes",level:2}],c={toc:l};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"pipes allows you (app developer) or other package developers to push and listen to in app events ,\nneeds a callback when a pages pushed add a listener or more if needed, needs a callback when theme changes here you go ,\nits easy ... and so on"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"How Pipes Work",src:n(8715).Z,width:"1118",height:"452"})),(0,a.kt)("h2",{id:"qevent"},(0,a.kt)("inlineCode",{parentName:"h2"},"QEvent")),(0,a.kt)("p",null,"base class for all events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"abstract class ThemeChangedEvent extends QEvent {\n   final ThemeData newTheme;\n\n   ThemeChangedEvent(this.newTheme) : super();\n}\n")),(0,a.kt)("h2",{id:"qlistener"},(0,a.kt)("inlineCode",{parentName:"h2"},"QListener")),(0,a.kt)("p",null,"base class for all listeners"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"abstract class ThemeChangesListener extends QListener<ThemeChangedEvent> {\n  Future<void> onOccurred(ThemeChangedEvent event){\n    print('this will be triggered when a ThemeChangedEvent pushed to the pipes !');\n  }\n }\n")),(0,a.kt)("h2",{id:"add-new-event-to-the-pipes"},"Add new Event to the pipes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Pipes.sink(ThemeChangedEvent());\n")),(0,a.kt)("h2",{id:"register-a-listener-for-event"},"register a listener for event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Pipes.on<ThemeChangedEvent>(ThemeChangesListener());\n")),(0,a.kt)("h2",{id:"remove-a-listener-from-the-pipes"},"remove a listener from the pipes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Pipes.remove<ThemeChangesListener>();\n")))}d.isMDXComponent=!0},8715:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/how_pipes_work-ce6151420900860598665cce46faa82f.png"}}]);