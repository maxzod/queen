"use strict";(self.webpackChunkqueen=self.webpackChunkqueen||[]).push([[762],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var l=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=l.createContext({}),s=function(e){var t=l.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(r),m=n,g=d["".concat(u,".").concat(m)]||d[m]||k[m]||a;return r?l.createElement(g,i(i({ref:t},p),{},{components:r})):l.createElement(g,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1715:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>k,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var l=r(7462),n=(r(7294),r(3905));const a={title:"Prefs",sidebar_position:7},i=void 0,o={unversionedId:"prefs",id:"prefs",title:"Prefs",description:"getStringOrNull",source:"@site/docs/7_prefs.md",sourceDirName:".",slug:"/prefs",permalink:"/queen/docs/prefs",draft:!1,editUrl:"https://github.com/FlutterQueen/queen/tree/master/docs/7_prefs.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Prefs",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Helpers(readable)",permalink:"/queen/docs/helpers"},next:{title:"lighthouse (CLI)",permalink:"/queen/docs/cli"}},u={},s=[{value:"getStringOrNull",id:"getstringornull",level:2},{value:"getStringOrEmpty",id:"getstringorempty",level:3},{value:"setString",id:"setstring",level:2},{value:"setStringToEmpty",id:"setstringtoempty",level:2},{value:"getIntOrNull",id:"getintornull",level:2},{value:"getIntOr",id:"getintor",level:2},{value:"getIntOrZero",id:"getintorzero",level:2},{value:"getBoolOrNull",id:"getboolornull",level:2},{value:"getBoolOr",id:"getboolor",level:2},{value:"getBoolOrFalse",id:"getboolorfalse",level:2},{value:"getBoolOrTrue",id:"getboolortrue",level:2},{value:"setBool",id:"setbool",level:2},{value:"getMap",id:"getmap",level:2},{value:"setMap",id:"setmap",level:2},{value:"clear",id:"clear",level:2},{value:"remove",id:"remove",level:2},{value:"removeMany",id:"removemany",level:2},{value:"getDateOrNull",id:"getdateornull",level:2},{value:"getDateOrNow",id:"getdateornow",level:2},{value:"setDate",id:"setdate",level:2},{value:"find",id:"find",level:2}],p={toc:s};function k(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"getstringornull"},"getStringOrNull"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Return ",(0,n.kt)("inlineCode",{parentName:"p"},"String")," by key if exists else return ",(0,n.kt)("inlineCode",{parentName:"p"},"null")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"String? foo  = Prefs.getStringOrNull('key');\n")),(0,n.kt)("h2",{parentName:"li",id:"getstringor"},"getStringOr")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Return ",(0,n.kt)("inlineCode",{parentName:"p"},"String")," by key if exists else return default value"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"String? foo  = Prefs.getStringOr('key','def');\n")))),(0,n.kt)("h3",{id:"getstringorempty"},"getStringOrEmpty"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"String")," by key if exists else return ",(0,n.kt)("inlineCode",{parentName:"li"},"''")," (Empty String)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"String foo  = Prefs.getStringOrEmpty('key');\n")),(0,n.kt)("h2",{id:"setstring"},"setString"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set the value to given key in shared prefs ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.setString('key','value');\n")),(0,n.kt)("h2",{id:"setstringtoempty"},"setStringToEmpty"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set the value to given key to ",(0,n.kt)("inlineCode",{parentName:"li"},"''")," (Empty String)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.setStringToEmpty('key');\n")),(0,n.kt)("h2",{id:"getintornull"},"getIntOrNull"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"int")," by key else return ",(0,n.kt)("inlineCode",{parentName:"li"},"null"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"int? foo  = Prefs.getIntOrNull('key');\n")),(0,n.kt)("h2",{id:"getintor"},"getIntOr"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"int")," by key else return default value`")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"int foo  = Prefs.getIntOr('key',def) ;\n")),(0,n.kt)("h2",{id:"getintorzero"},"getIntOrZero"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"int")," by key else return ",(0,n.kt)("inlineCode",{parentName:"li"},"0"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"int foo  = Prefs.getIntOrZero('key') ;\n")),(0,n.kt)("h2",{id:"getboolornull"},"getBoolOrNull"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"bool")," by key if exist else return ",(0,n.kt)("inlineCode",{parentName:"li"},"null")," ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"bool? foo  = Prefs.getBoolOrNull('key') ;\n")),(0,n.kt)("h2",{id:"getboolor"},"getBoolOr"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"bool")," by key if exist - else return the default value")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"bool firstTimeOpen  = Prefs.getBoolOr('key', true ) ;\n")),(0,n.kt)("h2",{id:"getboolorfalse"},"getBoolOrFalse"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"bool")," by key if exist else return False  ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"bool isFound  = Prefs.getBoolOrFalse('key') ;\n")),(0,n.kt)("h2",{id:"getboolortrue"},"getBoolOrTrue"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"bool")," by key if exist else return True ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"bool isFound  = Prefs.getBoolOrTrue('key' ) ;\n")),(0,n.kt)("h2",{id:"setbool"},"setBool"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set the value => True or False to given key in shared prefs  ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"}," Prefs.setBool(key, value);\n")),(0,n.kt)("h2",{id:"getmap"},"getMap"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return Map by given key or value")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"}," Map<String, dynamic> isMap  = Prefs.getMap('key') ;\n")),(0,n.kt)("h2",{id:"setmap"},"setMap"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set value of map by given key & own map ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.setMap('key',{}) ;\n")),(0,n.kt)("h2",{id:"clear"},"clear"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"clear the share preferences ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"}," Prefs.clear() ;\n")),(0,n.kt)("h2",{id:"remove"},"remove"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Remove specially key from sheared preferences ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.remove('key') ;\n")),(0,n.kt)("h2",{id:"removemany"},"removeMany"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Remove list of value from sheared preferences just pass key of list ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},' Prefs.removeMany(["key","foo","rQueen"]) ;\n')),(0,n.kt)("h2",{id:"getdateornull"},"getDateOrNull"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"dateTime")," by key if exists else return ",(0,n.kt)("inlineCode",{parentName:"li"},"null"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"DateTime? date =Prefs.getDateOrNull('key') ;\n")),(0,n.kt)("h2",{id:"getdateornow"},"getDateOrNow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Return ",(0,n.kt)("inlineCode",{parentName:"li"},"dateTime")," by key if exists else return current date")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"DateTime? date =Prefs.getDateOrNull('key') ;\n")),(0,n.kt)("h2",{id:"setdate"},"setDate"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set data time by given key & value => from data time  ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.setDate('key',dateTime) ;\n")),(0,n.kt)("h2",{id:"find"},"find"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"get value without preferences the data types by given key ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Prefs.find('key') ;\n")))}k.isMDXComponent=!0}}]);