"use strict";(self.webpackChunkqueen=self.webpackChunkqueen||[]).push([[253],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(t),h=o,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2818:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={title:"Lunchers"},l="Launchers",i={unversionedId:"launchers",id:"launchers",title:"Lunchers",description:"Introduction",source:"@site/docs/9_launchers.md",sourceDirName:".",slug:"/launchers",permalink:"/queen/docs/launchers",draft:!1,editUrl:"https://github.com/FlutterQueen/queen/tree/master/docs/9_launchers.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Lunchers"},sidebar:"tutorialSidebar",previous:{title:"lighthouse (CLI)",permalink:"/queen/docs/cli"},next:{title:"Pipes",permalink:"/queen/docs/pipes"}},c={},s=[{value:"Boot",id:"boot",level:2},{value:"shouldRunInParallel",id:"shouldruninparallel",level:2}],u={toc:s};function p(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"launchers"},"Launchers"),(0,o.kt)("p",null,"Introduction\nLaunchers are the way queen organize the process of register dependencies and bootstrap for Queen . Your own application, and other developers packages ,"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"How Pipes Work",src:t(4754).Z,width:"3552",height:"1600"})),(0,o.kt)("h2",{id:"boot"},"Boot"),(0,o.kt)("p",null,"In general, we mean registering things, including registering services, controllers, other packages dependencies and to bootstrap them if needed ",(0,o.kt)("inlineCode",{parentName:"p"},"boot")," will be called before the application run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass ThemeLauncher extends Launcher {\n\n  @override\n  FutureOr<void> boot() async => AwesomeController().init();\n\n}\n\n\n")),(0,o.kt)("h2",{id:"shouldruninparallel"},"shouldRunInParallel"),(0,o.kt)("p",null,"if ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," the Launcher boot will called after the previous one is done\nif ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," will boot in parallel with other Launchers (apps boot faster)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass ThemeLauncher extends Launcher {\n\n  @override\n  bool get shouldRunInParallel => true;\n\n}\n\n\n")))}p.isMDXComponent=!0},4754:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/launchers_work-017c6e42a9ae2e3feb18ca8fabf5c632.png"}}]);